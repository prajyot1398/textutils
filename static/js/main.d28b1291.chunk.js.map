{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/About.js","components/App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","dist","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","window","location","pathname","aria-current","includes","onClick","toggleMode","role","TextForm","_useState","useState","_useState2","Object","slicedToArray","text1","setText1","_useState3","_useState4","text2","setText2","reverseString","str","str1","checkValidText","i","length","push","charAt","join","text","undefined","trim","rows","placeholder","onChange","event","target","value","style","color","backgroundColor","split","toLowerCase","toUpperCase","showAlert","textArr","newText","forEach","e","slice","String","textForm","document","getElementById","selectionStart","selectionEnd","navigator","clipboard","writeText","substring","select","Alert","alert","message","About","href","prototype","PropTypes","string","isRequired","defaultProps","App","bgColor","setBgColor","setMode","_useState5","_useState6","setAlert","height","overflow","minHeight","components_Navbar","react_router_dist","exact","path","element","setTimeout","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","components_App"],"mappings":"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","file":"static/js/main.d28b1291.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Navbar(props) {\r\n\r\n    return (\r\n\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand btn btn-success\" to=\"/\">{props.title}</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className={`nav-link ${window.location.pathname === '/' ? \"active\" : \"\"}`} aria-current=\"page\" to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className={`nav-link ${window.location.pathname.includes('/about') ? \"active\" : \"\"}`} aria-current=\"page\" to=\"/about\">About</Link>\r\n                        </li>\r\n                    </ul>\r\n                    <div className={`form-check form-switch`} onClick={props.toggleMode}>\r\n                        {/*eslint-disable-next-line*/}\r\n                        <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                    </div>\r\n                    <label className={`text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>Toggle Dark Mode</label>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n\r\nNavbar.prototype = {\r\n    title : PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title : \"Set Title !\"\r\n}","import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  \r\n  //useState is the hook from react  \r\n  const [text1, setText1] = useState();  \r\n  const [text2, setText2] = useState();\r\n\r\n  //When Uppercase is clicked\r\n  const onUpperClicked = () => {\r\n    if(checkValidText(text1)) {\r\n      if(checkValidText(text2) && text1.split(/[ ]+/).join().toLowerCase() === text2.split(\" \").join().toLowerCase()) {\r\n        setText2(text2.toUpperCase());\r\n      }else {\r\n        setText2(text1.toUpperCase())\r\n      }\r\n    }else {\r\n      props.showAlert(\"Invalid Input Text !\", \"danger\");\r\n    }\r\n  }  \r\n\r\n  //When Lowecase is clicked\r\n  const onLowerClicked = () => {\r\n    if(checkValidText(text1)) {\r\n      if(checkValidText(text2) && text1.split(/[ ]+/).join().toLowerCase() === text2.split(\" \").join().toLowerCase()) {\r\n        setText2(text2.toLowerCase());\r\n      }else {\r\n        setText2(text1.toLowerCase())\r\n      }\r\n    }else {\r\n      props.showAlert(\"Invalid Input Text !\", \"danger\");\r\n    }\r\n  }\r\n\r\n  //When Clear is clicked\r\n  const onClearClicked = () => {\r\n    setText1(\"\");\r\n    setText2(\"\");\r\n  }\r\n\r\n  //When Clear Output Clicked\r\n  const onClearOutputClicked = () => {\r\n    setText2(\"\");\r\n  }\r\n\r\n  //When Remove Extra Spaces Is Clicked\r\n  const onRemoveExtraSpaces = () => {\r\n    if(checkValidText(text1)) {\r\n      setText2(text1.split(/[ ]+/).join(\" \"));\r\n      props.showAlert(\"Extra Spaces Removed !!\", \"success\");\r\n    }else {\r\n      props.showAlert(\"Invalid Input Text !\", \"danger\");\r\n    }\r\n  }\r\n\r\n  //copy the selected content, if not selected whole \r\n  const onCopySelected = () => {\r\n    let textForm = document.getElementById(\"inpTextArea\");\r\n    if (textForm.selectionStart !== undefined && textForm.selectionStart !== textForm.selectionEnd) {\r\n      navigator.clipboard.writeText(textForm.value.substring(textForm.selectionStart, textForm.selectionEnd));\r\n      props.showAlert(\"Text Copied To Clipboard !!\", \"success\");\r\n    }else {\r\n      textForm.select();\r\n      navigator.clipboard.writeText(textForm.value);\r\n    }\r\n\r\n  }\r\n\r\n  //Copy whole output\r\n  const onCopyOutput = () => {\r\n    document.getElementById(\"opTextArea\").select();\r\n    navigator.clipboard.writeText(text2);\r\n    props.showAlert(\"Text Copied To Clipboard !!\", \"success\");\r\n  }\r\n  \r\n  //Add Search Count For Word.\r\n\r\n  //Capitalize first letter.\r\n  const onCapitalizeFirstLetter = () => {\r\n    if(checkValidText(text1)) {\r\n      let text = \"\";\r\n      if(checkValidText(text2) && text1.split(/[ ]+/).join().toLowerCase() === text2.split(\" \").join().toLowerCase()) {\r\n        text = text2.toLowerCase();\r\n      }else {\r\n        text = text1.toLowerCase();\r\n      }\r\n      let textArr = text.split(/[ ]+/);\r\n      let newText = \"\";\r\n      textArr.forEach((e) => {\r\n        e = e.charAt(0).toUpperCase()+e.slice(1);\r\n        newText = newText+e+\" \";\r\n      })\r\n      setText2(newText);\r\n    }else {\r\n      props.showAlert(\"Invalid Input Text !\", \"danger\");\r\n    }\r\n  }\r\n\r\n  const reverseString = (str) => {\r\n    let str1 = [];\r\n    if(checkValidText(str)) {\r\n      \r\n      for (let i=str.length-1; i >= 0 ; i--) {\r\n        str1.push(str.charAt(i));\r\n      } \r\n    }\r\n    return str1.join(\"\");\r\n  }\r\n\r\n  //Reverse String\r\n  const onReverseText = () => {\r\n    if(checkValidText(text1)) {\r\n      if(checkValidText(text2) && text1.toLowerCase() !== reverseString(String(text2)).toLowerCase()) {\r\n        setText2(reverseString(String(text2)));\r\n      }else {\r\n        setText2(reverseString(String(text1)));\r\n      }\r\n    }else {\r\n      props.showAlert(\"Invalid Input Text !\", \"danger\");\r\n    }\r\n  }\r\n\r\n  const onInpChanged = (event) => {\r\n    setText1(event.target.value);\r\n    if(event.target.value === undefined || event.target.value === \"\") {\r\n        setText2(\"\");\r\n    }\r\n  }\r\n\r\n  const onOpChanged = (event) => {\r\n    if(!checkValidText(text1)) {\r\n      setText2(\"\")\r\n      event.target.value = \"\";\r\n    }\r\n  }\r\n\r\n  const checkValidText = (text) => text !== undefined && text !== null && text.trim() !== \"\"\r\n\r\n  return (\r\n    <div className=\"container\">\r\n        <h2 className={`mt-3 text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>Enter Text To Modify</h2>\r\n        <div className=\"mt-1 mb-3\">\r\n            <div className=\"input-group\">\r\n                <textarea className={`form-control`} \r\n                    id=\"inpTextArea\" rows=\"8\" placeholder=\"Enter Text Here\" \r\n                    onChange={onInpChanged}\r\n                    value={text1}\r\n                    style = {{color : props.mode === \"light\" ? \"black\" : \"white\",\r\n                              backgroundColor : props.mode === \"light\" ? \"white\" : \"RGBA(33,37,41)\"}}/>\r\n                <textarea className={`form-control`} onChange={onOpChanged}\r\n                    id=\"opTextArea\" rows=\"8\" placeholder=\"Updated Text Here\" value={text2}\r\n                    style = {{color : props.mode === \"light\" ? \"black\" : \"white\",\r\n                      backgroundColor : props.mode === \"light\" ? \"white\" : \"RGBA(33,37,41)\"}}\r\n                    />\r\n            </div>\r\n        </div>\r\n        <button className=\"btn btn-outline-success me-3 my-3\" onClick={onUpperClicked}>Uppercase</button>\r\n        <button className=\"btn btn-outline-success me-3 my-3\" onClick={onLowerClicked}>Lowecase</button>\r\n        <button className=\"btn btn-outline-success me-3 my-3\" onClick={onCapitalizeFirstLetter}>Capitalize</button>\r\n        <button className=\"btn btn-outline-success me-3 my-3\" onClick={onRemoveExtraSpaces}>Remove Extra Spaces</button>\r\n        <button className=\"btn btn-outline-success me-3 my-3\" onClick={onReverseText}>Reverse Text</button>\r\n        <button className=\"btn btn-outline-success me-3 my-3\" onClick={onCopySelected}>Copy Selected</button>\r\n        <button className=\"btn btn-outline-success me-3 my-3\" onClick={onCopyOutput}>Copy Output</button>\r\n        <button className=\"btn btn-outline-success me-3 my-3\" onClick={onClearClicked}>Clear</button>\r\n        <button className=\"btn btn-outline-success me-3 my-3\" onClick={onClearOutputClicked}>Clear Output</button>\r\n\r\n        <div>\r\n            <h3 className={`mt-4 text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>Text Summary</h3>\r\n            <p className={`text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\r\n                Words : {checkValidText(text1) ? text1.split(/[ ]+/).join(\" \").trim().split(\" \").length : 0} <br></br>\r\n                Length : {checkValidText(text1) ? text1.split(/[ ]+/).join(\" \").trim().length : 0}<br></br>\r\n                Time To Read : {checkValidText(text1) ? text1.split(/[ ]+/).join(\" \").trim().split(\" \").length*0.0076 : 0} Minutes.\r\n            </p>\r\n            {checkValidText(text1) && <h4 className={`text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>Prview</h4>}\r\n            {checkValidText(text1) && <p className={`text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>{text1}</p>}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n        \r\n    props.alert && <div className={`alert alert-${props.alert.type}`} role=\"alert\">\r\n       {props.alert.message}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n  return (\r\n    <div className='container text-center my-5'>\r\n      <p className={`text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\r\n        This Website Is Made Using React With ❤ By Prajyot Jadhav. <br/> \r\n        This Is Built While Learning React.<br/>\r\n        Please Let Me Know Your Feedbacks&nbsp;\r\n        <a href={`mailto:prajyot13.98@gmail.com?subject=TextUtils`}>Here</a>.\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport Navbar from \"./Navbar\";\r\nimport TextForm from \"./TextForm\";\r\nimport {useState} from 'react';\r\nimport Alert from \"./Alert\";\r\nimport About from \"./About\";\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n\r\n  const [bgColor, setBgColor] = useState(\"RGBA(33,37,41)\")\r\n\r\n  const [mode, setMode] = useState(\"dark\");\r\n  \r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      message : message,\r\n      type : type\r\n    })\r\n    setTimeout(() => {\r\n      setAlert(null);      \r\n    }, 1500);\r\n  }\r\n  \r\n  const toggleMode = () => {\r\n    if(mode === \"light\") {\r\n      setMode(\"dark\");\r\n      setBgColor(\"RGBA(33,37,41)\");\r\n    }else {\r\n      setMode(\"light\");\r\n      setBgColor(\"white\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div  style={{height:\"auto\", overflow:\"auto\", minHeight: \"100vh\", backgroundColor:bgColor}}>\r\n        <Navbar title=\"TextUtils\" toggleMode={toggleMode} mode={mode}/>\r\n        <Alert alert={alert}/>\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<TextForm mode={mode} showAlert={showAlert}/>} />\r\n          <Route exact path=\"/about\" element={<About mode={mode}/>} />\r\n        </Routes>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <div>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </div>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}